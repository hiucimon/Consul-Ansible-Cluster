

- debug: var=all_ips

- name: Get running processes
  shell: "ps -ef | grep -v grep | grep -w consul | awk '{print $2}'"
  register: running_processes

- name: Kill running processes
  shell: "kill {{ item }}"
  with_items: "{{ running_processes.stdout_lines }}"

- name: Waiting until all running processes are killed
  wait_for:
    path: "/proc/{{ item }}/status"
    state: absent
  with_items: "{{ running_processes.stdout_lines }}"

- name: Install unzip
  action: >
    {{ ansible_pkg_mgr }} name=unzip state=present update_cache=yes

- name: Extract consul into /usr/local/bin
  become: true
  unarchive:
    src: https://releases.hashicorp.com/consul/1.2.0/consul_1.2.0_linux_amd64.zip
    dest: /usr/local/bin/
    remote_src: yes

- name: Generate consul key
  command: consul keygen
  register: temp_key
  when: consul_key is undefined

- debug: var=temp_key
- debug: var=consul_key

- debug: var=temp_key
- debug: var=consul_key

- name: Check that the setkey.sh exists
  stat:
    path: ./files/setkey.sh
  register: stat_result

- name: Create consul encryption key
  shell: |
    export KEY=$(consul keygen)
    echo >/tmp/setkey.sh export KEY="$KEY"

- name: Fetch consul encryption key script
  fetch:
    src: /tmp/setkey.sh
    dest: ./files/setkey.sh
    flat: yes
    validate_checksum: no
    register: setkey

- name: Copy setkey.sh
  copy:
    src: ./files/setkey.sh
    dest: /tmp/consul_setkey.sh
    owner: consul
    group: consul
    mode: 0644
  loop: "{{ groups['all'] }}"

- name: Remove setkey.sh
  file:
    path: /tmp/setkey.sh
    state: absent

#- template:
#    src: consul.cfg.j2
#    dest: "{{ config_name }}"
#    owner: consul
#    group: consul
#    mode: 0644

- template:
    src: consul.sh.j2
    dest: "{{ consul_shell }}"
    owner: consul
    group: consul
    mode: 0700

- name: Configure consul
  shell: |
    . /tmp/consul_setkey.sh
    sed -i -e "s/CRYPTKEY/$KEY/g" {{ consul_shell }}
  ignore_errors: yes

- name: Run Consul
  shell: nohup bash {{ consul_shell }} &
